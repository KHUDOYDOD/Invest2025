
import { NextResponse } from "next/server"
import { query } from "@/lib/database"

export async function GET() {
  try {
    console.log("Loading new users from database...")

    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 8 –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –ª–µ–Ω—Ç—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    const result = await query(`
      SELECT 
        u.id,
        u.full_name as name,
        u.email,
        u.created_at as joined_date,
        u.country,
        u.country_name
      FROM users u
      WHERE u.role_id = 2
      ORDER BY u.created_at DESC
      LIMIT 8
    `)

    // –ú–∞–ø–ø–∏–Ω–≥ –∫–æ–¥–æ–≤ —Å—Ç—Ä–∞–Ω –Ω–∞ —Ñ–ª–∞–≥–∏ –∏ –Ω–∞–∑–≤–∞–Ω–∏—è
    const countryMap: Record<string, { flag: string; name: string }> = {
      'RU': { flag: 'üá∑üá∫', name: '–†–æ—Å—Å–∏—è' },
      'US': { flag: 'üá∫üá∏', name: '–°–®–ê' },
      'GB': { flag: 'üá¨üáß', name: '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è' },
      'DE': { flag: 'üá©üá™', name: '–ì–µ—Ä–º–∞–Ω–∏—è' },
      'FR': { flag: 'üá´üá∑', name: '–§—Ä–∞–Ω—Ü–∏—è' },
      'CN': { flag: 'üá®üá≥', name: '–ö–∏—Ç–∞–π' },
      'JP': { flag: 'üáØüáµ', name: '–Ø–ø–æ–Ω–∏—è' },
      'KR': { flag: 'üá∞üá∑', name: '–Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è' },
      'IN': { flag: 'üáÆüá≥', name: '–ò–Ω–¥–∏—è' },
      'BR': { flag: 'üáßüá∑', name: '–ë—Ä–∞–∑–∏–ª–∏—è' },
      'IT': { flag: 'üáÆüáπ', name: '–ò—Ç–∞–ª–∏—è' },
      'ES': { flag: 'üá™üá∏', name: '–ò—Å–ø–∞–Ω–∏—è' },
      'CA': { flag: 'üá®üá¶', name: '–ö–∞–Ω–∞–¥–∞' },
      'AU': { flag: 'üá¶üá∫', name: '–ê–≤—Å—Ç—Ä–∞–ª–∏—è' },
      'MX': { flag: 'üá≤üáΩ', name: '–ú–µ–∫—Å–∏–∫–∞' },
      'AR': { flag: 'üá¶üá∑', name: '–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞' },
      'TR': { flag: 'üáπüá∑', name: '–¢—É—Ä—Ü–∏—è' },
      'UA': { flag: 'üá∫üá¶', name: '–£–∫—Ä–∞–∏–Ω–∞' },
      'BY': { flag: 'üáßüáæ', name: '–ë–µ–ª–∞—Ä—É—Å—å' },
      'KZ': { flag: 'üá∞üáø', name: '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω' }
    }

    const newUsers = result.rows.map(user => {
      const countryInfo = countryMap[user.country] || { flag: 'üåç', name: user.country_name || user.country || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ' }
      return {
        id: user.id,
        name: user.name || 'Anonymous User',
        email: user.email,
        joinedDate: user.joined_date,
        country: user.country,
        countryFlag: countryInfo.flag,
        countryName: user.country_name || countryInfo.name
      }
    })

    console.log(`‚úÖ Loaded ${newUsers.length} new users from database`)

    return NextResponse.json({
      success: true,
      data: newUsers
    })
  } catch (error) {
    console.error("Error loading new users:", error)
    return NextResponse.json({
      success: false,
      error: "Failed to load new users"
    }, { status: 500 })
  }
}
